//  주석: 소스코드 내에 해당 소스코드에 대한 설명을 기술하고 싶을때 사용(소스코드와 무관,코드로 인식되지 않는 부분)
// 한줄 짜리 주석 
/*
 *  여러줄 짜리 주석
 */

/*
 *  *자바 프로그래밍 순서
 *  1. 프로젝트 생성
 *  2. 패키지 생성(src폴더 안에 )
 *  3. 클래스 생성 (패키지 안에)
 */

/*
 * Project : 내가 만들 프로그램에 필요한 모든 파일, 폴더들을 담고있는 최상위 폴더
 *           즉, 프로그램 1개 단위 = 프로젝트 폴더 1개 
 */

package com.kh.first;

/*
 * Package : 프로젝트 내에 존재하는 src 폴더 내에 소스코드들을 보관하는 폴더 개념 
 * 
 * -패키지 생성 시 규칙 
 * 1. 패키지 소문자로 만든다. 
 * 2. 패키지 안에 새로운 패키지를 만들경우, 기존패키지명.새로운패키지명으로 짓는다.
 * 3.com.kh.first 이런식으로 한번에 패키지들을 만들 수 있다.
 * 
 * -패키지 생성 시 주의사항 
 * 1. 한 패키지 내에 동일한 이름의 패키지들이 존재할 수 없다. (이름의 중복 불가)
 * 2. 한 패키지 내에 동일한 이름의 클래스들이 존재할 수 없다. (이름의 중복 불가)
 * 3. 기본패키지(패키지가 없는 상태 )  에 클래스를 만드는 것은 권장하지 않음
 *     왜?  => 모든 클래스들을 그냥 기본패키지에 분류 없이 몰아넣으면 관리하기가 힘듬
 *          => 기본패키지에 만들어진 클래스들은 절대 다른 패키지에서 사용 불가 (클래스의 위치를 찾아갈수가 없다.)
 *          
 * -패키지 생성 시 권장사항
 * 1. 패키지는 적어도 세단계 이상으로 만들어주는것을 권장.
 *   => com.회사명.프로젝트명 또는 com.회사명.카테고리명
 * 2. 패키지의 두번째 레벨까지는 주로 도메인 주소의 역순으로 쓴다. (예. www.naver.com)
 *  왜? => 도메인주소는 고유한 이름이기 때문. (중복을 애초에 막겠다.) 
 *      => 패키지만 봐도 어디서 제작한 프로젝트인지 한눈에 파악이 가능하기 때문.
 *      
 *                        
 */

public class HelloWorld {

	/*
	 * *Class : 유사한 특징을 지닌 변수와 메소드들을 묶어 놓은 집합체 
	 *          자바에서는 모든 코드들이 반드시 클래스(.java 파일) 안에 존재해야 하며
	 *          이 때 한개의 클래스= 한 개의 .java 파일이 된다.
	 */
	
}
